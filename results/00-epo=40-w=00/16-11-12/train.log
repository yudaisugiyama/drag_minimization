[2022-09-13 16:11:14,614][util][INFO] - yaml
name: drag
model:
  epsilon: 0.1
  batch_size: 5
  gamma: 0.9
  learning_rate: 0.00025
  synchro_time: 100
  weight_name: weight.pth
  test_anim_name: test.GIF
  warm_up_anim_name: warm_up.GIF
  reward_fig_name: reward.png
  test_reward_fig_name: reward.png
  loss_fig_name: loss.png
  anim_interval: 25
  train_anim_show: false
env:
  init_wide: 0.5
  init_height: 0.5
  max_episode: 100
  max_epoch: 40
  warm_up_epoch: 10
  round_digit: 16
  edp_path: /Users/YudaiSugiyama/00-Kurahashi-labo/00-program/06-DQN-minimize-drag/test.edp
  csv_path: data.csv

[2022-09-13 16:11:14,630][util][INFO] - optimizer
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.00025
    weight_decay: 0
)
[2022-09-13 16:11:14,631][util][INFO] - loss function
SmoothL1Loss()
[2022-09-13 16:11:14,631][util][INFO] - actions list
[[-0.01  0.  ]
 [ 0.    0.  ]
 [ 0.01  0.  ]]
[2022-09-13 16:11:14,632][util][INFO] - main network
Sequential(
  (0): Linear(in_features=2, out_features=3, bias=True)
  (1): ReLU()
  (2): Linear(in_features=3, out_features=4, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4, out_features=5, bias=True)
  (5): ReLU()
  (6): Linear(in_features=5, out_features=3, bias=True)
)
[2022-09-13 16:11:14,633][util][INFO] - target network
Sequential(
  (0): Linear(in_features=2, out_features=3, bias=True)
  (1): ReLU()
  (2): Linear(in_features=3, out_features=4, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4, out_features=5, bias=True)
  (5): ReLU()
  (6): Linear(in_features=5, out_features=3, bias=True)
)
[2022-09-13 16:11:34,525][matplotlib.animation][WARNING] - MovieWriter ffmpeg unavailable; using Pillow instead.
[2022-09-13 16:11:34,525][matplotlib.animation][INFO] - Animation.save using <class 'matplotlib.animation.PillowWriter'>
[2022-09-13 18:10:51,397][matplotlib.legend][WARNING] - No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
[2022-09-13 18:10:51,481][matplotlib.legend][WARNING] - No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
[2022-09-13 18:10:51,540][util][INFO] - q value
[tensor([ 0.3000, -0.2905,  0.2979,  0.3007,  0.2981], grad_fn=<IndexBackward0>), tensor([ 0.2726,  0.2724,  0.2725,  0.2726, -0.2909], grad_fn=<IndexBackward0>), tensor([0.2482, 0.2476, 0.2502, 0.2476, 0.2477], grad_fn=<IndexBackward0>), tensor([0.2240, 0.2240, 0.2240, 0.2239, 0.2238], grad_fn=<IndexBackward0>), tensor([0.1995, 0.1992, 0.1990, 0.1992, 0.1992], grad_fn=<IndexBackward0>), tensor([0.1735, 0.1741, 0.1733, 0.1745, 0.1736], grad_fn=<IndexBackward0>), tensor([0.1474, 0.1489, 0.1483, 0.1476, 0.1476], grad_fn=<IndexBackward0>), tensor([0.1211, 0.1218, 0.1227, 0.1216, 0.1215], grad_fn=<IndexBackward0>), tensor([0.0975, 0.0952, 0.0962, 0.0952, 0.0948], grad_fn=<IndexBackward0>), tensor([0.0709, 0.0686, 0.0704, 0.0706, 0.0697], grad_fn=<IndexBackward0>), tensor([0.0417, 0.0419, 0.0443, 0.0443, 0.0417], grad_fn=<IndexBackward0>), tensor([0.0146, 0.0151, 0.0142, 0.0167, 0.0165], grad_fn=<IndexBackward0>), tensor([-0.0136, -0.0120, -0.0093, -0.3475, -0.0089], grad_fn=<IndexBackward0>), tensor([-0.0410, -0.0389, -0.0386, -0.0408, -0.0407], grad_fn=<IndexBackward0>), tensor([-0.0687, -0.0661, -0.0685, -0.0687, -0.0645], grad_fn=<IndexBackward0>), tensor([-0.0950, -0.0946, -0.0970, -0.0972, -0.0965], grad_fn=<IndexBackward0>), tensor([-0.1240, -0.1265, -0.1258, -0.1256, -0.1259], grad_fn=<IndexBackward0>), tensor([-0.1547, -0.1551, -0.1549, -0.1550, -0.1554], grad_fn=<IndexBackward0>), tensor([-0.1846, -0.1889, -0.1848, -0.1849, -0.1847], grad_fn=<IndexBackward0>), tensor([-0.2146, -0.2186, -0.2199, -0.2135, -0.2144], grad_fn=<IndexBackward0>), tensor([-0.2482, -0.2460, -0.2504, -0.2462, -0.4244], grad_fn=<IndexBackward0>), tensor([-0.2785, -0.2817, -0.2804, -0.2789, -0.2807], grad_fn=<IndexBackward0>), tensor([-0.3099, -0.3117, -0.3078, -0.2756, -0.3102], grad_fn=<IndexBackward0>), tensor([-0.3396, -0.3397, -0.3397, -0.2961, -0.3393], grad_fn=<IndexBackward0>), tensor([-0.3203, -0.3668, -0.3203, -0.3203, -0.3203], grad_fn=<IndexBackward0>), tensor([-0.4755, -0.3930, -0.3930, -0.3932, -0.3987], grad_fn=<IndexBackward0>), tensor([-0.4226, -0.4206, -0.3704, -0.4229, -0.4209], grad_fn=<IndexBackward0>), tensor([-0.3961, -0.4482, -0.4489, -0.4522, -0.4486], grad_fn=<IndexBackward0>), tensor([-0.4806, -0.4797, -0.4792, -0.4855, -0.4215], grad_fn=<IndexBackward0>), tensor([-0.4355, -0.5225, -0.5176, -0.5090, -0.5093], grad_fn=<IndexBackward0>), tensor([-0.5609, -0.4571, -0.4571, -0.5425, -0.5222], grad_fn=<IndexBackward0>), tensor([-0.4827, -0.5856, -0.5815, -0.5953, -0.5767], grad_fn=<IndexBackward0>), tensor([-0.5115, -0.5115, -0.5115, -0.6560, -0.5115], grad_fn=<IndexBackward0>), tensor([-0.7101, -0.6499, -0.6657, -0.6589, -0.7052], grad_fn=<IndexBackward0>), tensor([-0.7917, -0.7056, -0.6949, -0.5704, -0.7685], grad_fn=<IndexBackward0>), tensor([-0.7433, -0.6094, -0.8545, -0.7692, -0.6094], grad_fn=<IndexBackward0>), tensor([-0.8211, -0.6524, -0.8113, -0.6531, -0.6524], grad_fn=<IndexBackward0>), tensor([-0.5816, -0.9329, -0.5534, -0.8973, -0.8852], grad_fn=<IndexBackward0>), tensor([-0.9836, -0.7330, -0.7320, -1.0814, -0.9427], grad_fn=<IndexBackward0>), tensor([-1.0021, -0.7682, -1.0624, -0.9954, -1.0901], grad_fn=<IndexBackward0>), tensor([-0.5262, -1.0696, -1.2153, -1.1659, -1.1046], grad_fn=<IndexBackward0>), tensor([-1.3575, -0.8631, -1.1749, -1.2886, -1.2782], grad_fn=<IndexBackward0>), tensor([-1.2255, -1.3235, -0.9070, -0.9101, -0.9085], grad_fn=<IndexBackward0>), tensor([-0.9552, -0.9552, -1.4748, -0.9536, -1.4388], grad_fn=<IndexBackward0>), tensor([-1.5304, -1.7334, -1.5969, -1.0024, -1.0144], grad_fn=<IndexBackward0>), tensor([-1.5190, -1.6445, -1.7840, -1.7198, -0.4032], grad_fn=<IndexBackward0>), tensor([-0.3691, -0.3689, -1.0983, -1.1003, -1.7131], grad_fn=<IndexBackward0>), tensor([-1.8780, -1.1366, -1.7138, -0.3311, -2.0303], grad_fn=<IndexBackward0>), tensor([-0.2898, -1.1620, -1.7942, -1.1705, -1.1752], grad_fn=<IndexBackward0>), tensor([-0.2527, -1.9047, -1.2096, -1.2143, -2.0954], grad_fn=<IndexBackward0>), tensor([-1.2650, -1.2598, -2.0584, -2.2342, -1.2598], grad_fn=<IndexBackward0>), tensor([-2.3534, -2.3718, -1.3184, -0.1579, -1.3211], grad_fn=<IndexBackward0>), tensor([-2.4427, -0.1056, -1.3686, -0.1011, -0.1040], grad_fn=<IndexBackward0>), tensor([-2.4426, -1.4177, -2.7209, -2.8034, -0.0204], grad_fn=<IndexBackward0>), tensor([ 0.0164, -1.4707, -2.9873, -2.7566, -1.4707], grad_fn=<IndexBackward0>), tensor([-1.5209, -1.5209,  0.0936, -1.5241, -2.7602], grad_fn=<IndexBackward0>), tensor([-3.4054, -3.2510, -3.5654, -1.5538,  0.1559], grad_fn=<IndexBackward0>), tensor([ 0.2182, -4.5665,  0.2188, -4.2816,  0.2194], grad_fn=<IndexBackward0>), tensor([-3.8856,  0.2932,  0.3054, -3.3495, -3.4784], grad_fn=<IndexBackward0>), tensor([-1.7513, -1.7587,  0.3803, -3.9051, -1.7549], grad_fn=<IndexBackward0>), tensor([-1.8183, -1.8106,  0.4737,  0.4728, -1.8225], grad_fn=<IndexBackward0>), tensor([-5.0005, -1.8814,  0.5792,  0.5772,  0.5805], grad_fn=<IndexBackward0>), tensor([ 0.6919,  0.6841,  0.6844, -6.7077, -4.1655], grad_fn=<IndexBackward0>), tensor([ 0.8022,  0.8078, -5.1315, -4.5490, -4.9961], grad_fn=<IndexBackward0>), tensor([ 0.9173,  1.2741, -2.0922,  0.9162,  0.9154], grad_fn=<IndexBackward0>), tensor([-5.4117,  1.0332,  1.0387, -2.1479,  1.0311], grad_fn=<IndexBackward0>), tensor([ 1.1741,  1.1672,  1.1652, -2.2372, -5.2703], grad_fn=<IndexBackward0>), tensor([-6.7608,  1.3049,  1.3034,  1.3035,  1.3067], grad_fn=<IndexBackward0>), tensor([-2.3124, -2.3560, -5.8134, -6.2177, -2.3560], grad_fn=<IndexBackward0>), tensor([ 1.6100, -2.4002,  1.6484, -5.8093, -2.4002], grad_fn=<IndexBackward0>), tensor([-6.1731, -9.3170,  1.7629,  1.7649, -2.4707], grad_fn=<IndexBackward0>), tensor([ 2.0103,  1.9099, -6.5695,  1.9082, -9.7146], grad_fn=<IndexBackward0>), tensor([ 2.0996, -2.5462,  2.1280, -7.5839,  2.1174], grad_fn=<IndexBackward0>), tensor([ 2.2895, -7.0452,  2.3350,  2.3350, -7.7803], grad_fn=<IndexBackward0>), tensor([ 2.4842, -7.3949,  2.4896,  2.4806, -2.6201], grad_fn=<IndexBackward0>), tensor([  2.6735,   2.6868,  -2.6449, -10.3078,   2.6697],
       grad_fn=<IndexBackward0>), tensor([-8.7261,  2.8899,  2.8782,  2.8824,  2.8944], grad_fn=<IndexBackward0>), tensor([-8.5349, -8.6546, -9.1062, -8.6907,  3.1132], grad_fn=<IndexBackward0>), tensor([-9.2945,  3.3876, -8.7527,  3.4030,  3.3448], grad_fn=<IndexBackward0>), tensor([-2.7398,  3.5836,  3.5870, -9.6965, -9.5934], grad_fn=<IndexBackward0>), tensor([  3.8593, -10.2219,   3.8366,  -2.7481,   3.8593],
       grad_fn=<IndexBackward0>), tensor([  4.0962, -10.2880,   4.6644,  -2.7327,  -2.7895],
       grad_fn=<IndexBackward0>), tensor([ -2.7971, -10.9737,   4.3878,   4.3723,   4.3969],
       grad_fn=<IndexBackward0>), tensor([  4.6787,  -2.8267, -11.0656, -10.7655,   4.6817],
       grad_fn=<IndexBackward0>), tensor([  5.0017,  -2.8811, -16.6471,  -2.8625, -11.5987],
       grad_fn=<IndexBackward0>), tensor([ 5.3192,  5.3042, -3.8513,  5.3707,  5.3536], grad_fn=<IndexBackward0>), tensor([ 5.6118, -2.8827,  5.6368,  5.6174,  5.6086], grad_fn=<IndexBackward0>), tensor([ 6.0436,  5.9757, -2.8444,  6.0266,  5.9764], grad_fn=<IndexBackward0>), tensor([-2.8288, -2.8152, -2.8380,  6.3389, -2.8288], grad_fn=<IndexBackward0>), tensor([ 6.6990,  6.6990,  6.7113,  6.7950, -2.7750], grad_fn=<IndexBackward0>), tensor([-2.9027, -2.7830,  7.1847,  7.0942,  7.1156], grad_fn=<IndexBackward0>), tensor([ 7.4759,  7.4348, -2.7604,  7.5314,  7.4312], grad_fn=<IndexBackward0>), tensor([7.9255, 7.8058, 7.8095, 8.0032, 7.8632], grad_fn=<IndexBackward0>), tensor([  8.2366, -17.4334,   8.2763,  -2.6594,  10.4387],
       grad_fn=<IndexBackward0>), tensor([  8.7036, -20.2408,   8.6701,   8.6868,   8.7644],
       grad_fn=<IndexBackward0>), tensor([-2.6311,  9.1322,  9.1008,  9.1458,  9.2498], grad_fn=<IndexBackward0>), tensor([ 9.6700,  9.6289,  9.8027, -2.5707,  9.5691], grad_fn=<IndexBackward0>), tensor([-18.5453,  -2.5354,  10.0552,  -2.5392, -18.2990],
       grad_fn=<IndexBackward0>), tensor([10.5946, 10.6404, 10.7745, 10.7904, 10.5672], grad_fn=<IndexBackward0>), tensor([ 11.1361,  -2.4725,  11.1577, -19.6800,  11.2064],
       grad_fn=<IndexBackward0>)]
[2022-09-13 18:10:51,564][util][INFO] - td error
[tensor([ -399.1791,     5.1958,   -66.4008, -1634.0208,  -197.4886]), tensor([-226.1572,  -17.9135,  -88.2134, -151.1433,    5.1770]), tensor([ -904.8810,  -298.5662, -2584.2278,  -259.5332,    -9.0208]), tensor([ -28.6136,  -34.7486,   -5.1201,  -48.9796, -101.1836]), tensor([ -66.4871, -172.7682, -543.5248, -172.7682, -197.5783]), tensor([-639.6221,  -88.3021, -399.2957,  -18.0019, -259.5995]), tensor([-904.9714,  -34.8147, -151.2551, -399.3187, -399.3187]), tensor([-399.3419, -172.8363,  -41.6026, -298.6786, -259.6456]), tensor([  -18.0710, -1634.2074,  -172.8600, -1634.2074,  -543.6169]), tensor([  -49.1152, -5928.6699,  -101.3196,   -76.8735,  -197.6932]), tensor([-1090.4552,  -543.6647,  -115.9465,  -115.9465, -2039.0251]), tensor([-1090.4790,  -464.8000,  -905.0901,  -172.9304,  -197.7406]), tensor([-757.9839, -298.7978,  -57.4675,  -70.7208,  -34.9552]), tensor([-1327.3286,  -151.4214,  -116.0190,  -298.8227, -2584.4880]), tensor([-226.4620,  -88.5162, -197.8157, -399.5118,   -9.2990]), tensor([  -41.7959,   -28.8955, -1327.3784, -2584.5383,  -101.4671]), tensor([   -9.3507, -1090.6040,  -344.9217,  -116.0966,  -399.5617]), tensor([ -49.3156, -259.8919, -116.1227, -173.0828, -464.9510]), tensor([  -49.3419, -3333.6096,  -101.5460,  -132.7041,   -77.1000]), tensor([   -66.8549,  -1090.6857,  -1634.4867, -11900.7021,    -41.9028]), tensor([ -399.6693,   -35.1647, -3333.6631,   -49.3958,   -94.5200]), tensor([  -57.7078,  -465.0620,  -299.0359, -3333.6897, -1634.5408]), tensor([-2.5847e+03, -7.5823e+02, -8.2490e+03, -2.3431e-01, -2.9070e+01]), tensor([ -116.2577,   -57.7316,   -77.2086, -2013.1138,  -465.0856]), tensor([  -0.2674, -226.6925,  -16.3975,  -16.3975,   -3.8070]), tensor([ -5802.6655,    -57.7718,    -77.2488,   -151.6999, -11900.8262]), tensor([ -544.0359,   -57.7924, -2013.1768,  -640.1110,  -116.3185]), tensor([-628.9968,  -13.8698,  -88.8127, -640.1338,  -57.8147]), tensor([ -198.1344,  -101.7611,   -57.8379,  -758.3529, -1611.9443]), tensor([-3.7388e-01, -1.3277e+03, -6.4018e+02, -2.9210e+01, -4.2110e+01]), tensor([-1.3277e+03, -3.9321e+00, -3.9246e-01, -6.7081e+01, -1.6396e+02]), tensor([  -3.9516, -226.8400, -132.9775, -640.2195,  -29.2483]), tensor([-4.3509e-01, -4.3509e-01, -4.3509e-01, -3.3339e+03, -4.3509e-01]), tensor([-2584.9688,   -18.6424,  -173.4359,   -88.9452, -2039.5778]), tensor([-5.9293e+03, -8.8975e+01, -1.8673e+01, -4.9105e-01, -3.3340e+03]), tensor([-9.7623e+00, -4.9650e-01, -4.3912e+03, -1.7347e+02, -4.9650e-01]), tensor([-116.5177,   -0.5042,  -77.4675,   -4.0440,   -0.5042]), tensor([-733.4086, -640.3195,   40.7000, -198.2911, -116.5189]), tensor([ -299.3238,    -7.8874,    -4.0425, -2585.0059,   -57.9889]), tensor([-3.5469e+01, -4.9578e-01, -3.4534e+02, -1.8678e+01, -6.4031e+02]), tensor([   37.6374,   -14.0214, -1091.0197,  -465.3335,  -101.8938]), tensor([-1634.8208,    -4.0174,   -42.2164,  -640.2964,  -544.2200]), tensor([  -2.1996, -260.2581,   -0.4687,   -4.0086,   -4.0086]), tensor([-3.9850e+00, -3.9850e+00, -6.4026e+02, -4.4509e-01, -3.9993e+02]), tensor([-3.4526e+02, -2.5849e+03, -1.0910e+03, -4.1434e-01, -2.1530e+01]), tensor([  -29.2325,  -345.2392, -1327.7311,  -758.4064,    39.3450]), tensor([  29.1600,   31.6891,   -0.3649,   -3.9046, -226.7964]), tensor([-3.9981e+02, -3.3237e-01, -2.9169e+01,  2.6344e+01, -1.3277e+03]), tensor([ 35.0406,   8.7760, -13.8365,  -0.2980,  -7.6823]), tensor([  42.2639,  -13.7983,    3.0051,   -3.7996, -345.0944]), tensor([-7.6098e+00, -2.2575e-01, -4.1961e+01, -3.4506e+02, -2.2575e-01]), tensor([-2.5995e+02, -2.9899e+02, -1.8063e-01,  4.4115e+01, -3.7201e+00]), tensor([-1.5154e+02,  4.7848e+01, -1.3764e-01,  1.3009e+01,  3.4164e+01]), tensor([-9.3534e+00, -8.8804e-02, -3.4491e+02, -5.4379e+02, -2.1548e+02]), tensor([  39.6938,   -3.5762, -639.8066, -172.9918,   -3.5762]), tensor([ 2.3395e-02,  2.3395e-02,  2.6694e+01, -3.5156e+00, -2.8808e+01]), tensor([ -757.8481,  -399.3427, -1327.1506,    14.1692,    42.6057]), tensor([   44.9764, -8248.4424,    42.0221, -4390.3979,    39.8787]), tensor([-757.7056,   46.9536,   13.3549,  -41.5147, -132.3262]), tensor([ 3.5445e+00, -3.2580e+00,  3.7507e+01, -3.9913e+02,  2.8043e-01]), tensor([-3.1798,  3.6223, 40.0795, 43.4866, -7.0230]), tensor([-2038.4413,    -3.0922,    33.6417,    37.6692,    31.2537]), tensor([    27.2014,     42.4007,     47.2761, -17987.5957,    -34.4152]), tensor([  35.9580,   27.2997, -757.1922, -115.3200, -542.9491]), tensor([ 4.8322e+01, -8.7533e+02,  7.4582e-01,  4.8713e+01,  4.7911e+01]), tensor([-398.4796,   48.0139,   28.9728,    4.1134,   43.9694]), tensor([ 27.6128,  47.2363,  42.8112,  -2.5788, -87.4684]), tensor([-1632.8656,    46.3999,    43.5757,    44.1965,    34.2653]), tensor([  29.5939,    1.2076, -100.1247, -343.4489,    1.2076]), tensor([ 39.4319,   1.3494,   9.2049, -12.1752,   1.3494]), tensor([  -21.7608, -8246.3564,    47.2892,    48.2137,   -14.6268]), tensor([  -22.7080,    33.6399,   -64.9989,    44.7315, -8246.1396]), tensor([  33.7735,   -1.7776,   12.3465, -397.4439,   19.4338]), tensor([  35.1036,  -11.5874,    9.7842,    9.7842, -296.6324]), tensor([ 43.9459, -11.4119,  48.3783,  32.8878,   2.1061]), tensor([ 2.7347e+01,  5.0243e+01,  2.2778e+00, -2.5813e+03,  4.5975e+01]), tensor([-296.0563,   48.2482,   44.2858,   46.1447,   49.1748]), tensor([ -26.1470,  -54.7525, -194.8923,  -63.9450,   46.9004]), tensor([-112.9879,   10.6931,   47.2296,   10.6931,   24.4626]), tensor([   3.0548,   41.1187,   43.4921, -112.7676,  -85.2771]), tensor([  48.5992, -147.8803,   42.1775,    9.5563,   48.5992]), tensor([  41.5742,  -63.0426, -183.7791,   31.8771,   -3.8561]), tensor([   3.7482, -128.5664,   46.8513,   31.8338,   19.2151]), tensor([ 45.1512,   7.2569, -53.3545,  -5.2397,  45.8335]), tensor([ 1.9731e+01, -1.1824e+01, -5.9222e+03,  7.3650e-01, -6.2264e+01]), tensor([   36.5343,    36.5343, -2006.7482,    51.2967,    49.8732]), tensor([31.4586,  1.3178, 47.3319, 28.2225, 34.3045]), tensor([52.7368, 46.9605,  1.5927, 12.9570, 20.5791]), tensor([ 8.6888, 39.7439,  1.9028, 45.8685,  8.6888]), tensor([41.0354, 41.0354, 25.4464, 52.5375, 29.6010]), tensor([-67.4935,   6.1092,  52.8874,  44.9974,  47.9521]), tensor([48.2995, 31.4851,  2.9264, 52.3005, 38.4298]), tensor([53.1082, 37.5189, 31.8046, 55.9608, 49.2738]), tensor([  39.0890, -251.9133,   47.5594,    7.1170, -608.9981]), tensor([   50.0098, -1081.1097,    20.5940,    48.6717,    53.3720]), tensor([ 7.8669, 20.9532, 31.2178, 48.3140, 54.2230]), tensor([52.0285, 49.4572, 56.3845,  4.7593, 31.6331]), tensor([-26.0980,   8.7099,  35.2928,   5.1842, -19.9888]), tensor([46.3344, 50.3362, 56.0084, 56.4537, 41.1206]), tensor([29.2677,  6.0905, 50.0752, -8.4650, 52.7767])]
[2022-09-13 18:10:51,587][util][INFO] - total reward history
    total reward        loss
0    -20234.4114  460.254456
1    -72490.5127   97.497086
2    -11070.0827  810.994019
3    -53622.2927   43.453041
4    -15443.9529  230.324539
..           ...         ...
95     1374.0804   25.215483
96     1208.4615   31.132483
97     1358.4298   10.189768
98     1285.9549   38.877235
99     1356.8082   23.179499

[100 rows x 2 columns]
[2022-09-13 18:10:51,599][util][INFO] - weight path
/Users/YudaiSugiyama/00-Kurahashi-labo/00-program/06-DQN-minimize-drag/outputs/2022-09-13/16-11-12/weight.pth
[2022-09-13 18:10:51,602][util][INFO] - time
7176.985s
